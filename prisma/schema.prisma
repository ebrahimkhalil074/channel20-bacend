// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id        String    @id @default(uuid())
  name      String
  email     String    @unique
  password  String
  role      UserRole      @default(USER)
  news      News[]
  videos    Video[]
  comments  Comment[]
  likes     Like[]
}

enum UserRole {
  ADMIN
  USER
}

model Category {
  id      String  @id @default(uuid())
  name    String  @unique
  news    News[]
  videos  Video[]
} 

model News {
  id          String     @id @default(uuid())
  title       String
  summary     String
  image       String?
  content     String
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  author      User       @relation(fields: [authorId], references: [id])
  authorId    String
  category    Category   @relation(fields: [categoryId], references: [id])
  categoryId  String
  comments    Comment[]
  likes       Like[]
}

model Video {
  id          String     @id @default(uuid())
  title       String
  videoUrl    String
  description String?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  author      User       @relation(fields: [authorId], references: [id])
  authorId    String
  category    Category   @relation(fields: [categoryId], references: [id])
  categoryId  String
  comments    Comment[]
  likes       Like[]
}

model Comment {
  id           String   @id @default(uuid())
  content      String
  createdAt    DateTime @default(now())

  // ✅ একজন logged-in user অথবা anonymous user হতে পারে
  user         User?    @relation(fields: [userId], references: [id])
  userId       String?  // optional
  anonymousId  String?  // ✅ localStorage বা cookie থেকে

  news         News?    @relation(fields: [newsId], references: [id])
  newsId       String?

  video        Video?   @relation(fields: [videoId], references: [id])
  videoId      String?
}

model Like {
  id           String   @id @default(uuid())

  // ✅ একজন logged-in user অথবা anonymous user হতে পারে
  user         User?    @relation(fields: [userId], references: [id])
  userId       String?  // optional
  anonymousId  String?  // ✅ localStorage বা cookie থেকে

  news         News?    @relation(fields: [newsId], references: [id])
  newsId       String?

  video        Video?   @relation(fields: [videoId], references: [id])
  videoId      String?

  @@unique([userId, newsId])
  @@unique([userId, videoId])
  @@unique([anonymousId, newsId])
  @@unique([anonymousId, videoId])
}

